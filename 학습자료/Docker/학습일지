https://subicura.com/2017/01/19/docker-guide-for-beginners-1.html
[도커 기본 개념 참조]

도커 설치하기
[참초 : https://subicura.com/2017/01/19/docker-guide-for-beginners-2.html]



root 권한으로 한 번에 설치하기

curl -fsSL https://get.docker.com/ | sudo sh



sudo 없이 사용하기

docker는 기본적으로 root권한이 필요합니다.
root가 아닌 사용자가 sudo없이 사용하려면 해당 사용자를 docker그룹에 추가합니다.
사용자가 로그인 중이라면 다시 로그인 후 권한이 적용됩니다.



설치확인하기

docker version

Client와 Server 정보가 정상적으로 출력되었다면 설치가 완료된 것 입니다.



컨테이너 실행하기

도커를 실행하는 명령어는 다음과 같습니다.

docker run [OPTIONS] IMAGE[:TAG|@DIGEST] [COMMAND] [ARG...]

옵션	설명
-d	detached mode 흔히 말하는 백그라운드 모드
-p	호스트와 컨테이너의 포트를 연결 (포워딩)
-v	호스트와 컨테이너의 디렉토리를 연결 (마운트)
-e	컨테이너 내에서 사용할 환경변수 설정
–name	컨테이너 이름 설정
–rm	프로세스 종료시 컨테이너 자동 제거
-it	-i와 -t를 동시에 사용한 것으로 터미널 입력을 위한 옵션
–link	컨테이너 연결 [컨테이너명:별칭]



16.04 LTS 이미지 올려보기

docker run ubuntu:16.04

run명령어를 사용하면 사용할 이미지가 저장되어 있는지 확인하고
없다면 다운로드(pull)를 한 후 컨테이너를 생성(create)하고 시작(start) 합니다.

컨테이너는 정상적으로 실행됐지만 뭘 하라고 명령어를 전달하지 않았기 때문에 생성되자마자 종료됩니다.
컨테이너는 프로세스이기 때문에 실행중인 프로세스가 없으면 컨테이너는 종료됩니다.


이번에는 /bin/bash 명령어를 입력해서 ubuntu:16.04 컨테이너를 실행해 보겠습니다.
(컨테이너 내부로 들어가기 위해 bash shell 실행함)

docker run --rm -it ubuntu:16.04 /bin/bash

* -rm : 프로세스 종료시 컨테이너 자동 제거
* -it : 터미널 입력을 위한 옵션


exit로 bash 쉘을 종료하면 컨테이너도 같이 종료됩니다.



필요에 따라 redis나 sql 컨테이너를 설치하여 DB 서버로 사용 가능함.
